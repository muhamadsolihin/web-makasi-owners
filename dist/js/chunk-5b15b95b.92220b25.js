(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-5b15b95b"],{"0f15":function(e,n,l){},"1a0c":function(e,n,l){"use strict";l("0f15")},"7e67":function(e,n,l){"use strict";l.r(n);var t=l("7a23");const a=Object(t["createElementVNode"])("div",{class:"mb-10"},[Object(t["createElementVNode"])("h1",{class:"anchor fw-bolder mb-5"},[Object(t["createElementVNode"])("a",{href:"#tree"}),Object(t["createTextVNode"])(" Tree ")]),Object(t["createElementVNode"])("div",{class:"py-5"}," Display a set of data with hierarchies. ")],-1);function d(e,n,l,d,o,r){const c=Object(t["resolveComponent"])("EUIBasicUsage"),i=Object(t["resolveComponent"])("EUISelectable"),s=Object(t["resolveComponent"])("EUICustomLeafNodeInLazyMode"),b=Object(t["resolveComponent"])("EUIDisabledCheckbox"),h=Object(t["resolveComponent"])("EUIDefaultExpandedAndDefaultChecked"),p=Object(t["resolveComponent"])("EUICheckingTreeNodes"),v=Object(t["resolveComponent"])("EUICustomNodeContent"),u=Object(t["resolveComponent"])("EUITreeNodeFiltering"),m=Object(t["resolveComponent"])("EUIAccordion"),g=Object(t["resolveComponent"])("EUIDraggable");return Object(t["openBlock"])(),Object(t["createElementBlock"])(t["Fragment"],null,[a,Object(t["createVNode"])(c),Object(t["createVNode"])(i),Object(t["createVNode"])(s),Object(t["createVNode"])(b),Object(t["createVNode"])(h),Object(t["createVNode"])(p),Object(t["createVNode"])(v),Object(t["createVNode"])(u),Object(t["createVNode"])(m),Object(t["createVNode"])(g)],64)}var o=l("4fb2");const r={class:"mb-10"},c=Object(t["createElementVNode"])("h2",{class:"anchor fw-bolder mb-5"},[Object(t["createElementVNode"])("a",{href:"#basic-usage"}),Object(t["createTextVNode"])(" Basic usage ")],-1),i=Object(t["createElementVNode"])("div",{class:"py-5"}," Basic tree structure. ",-1),s={class:"rounded border p-10"};function b(e,n,l,a,d,o){const b=Object(t["resolveComponent"])("el-tree"),h=Object(t["resolveComponent"])("CodeHighlighter");return Object(t["openBlock"])(),Object(t["createElementBlock"])("div",r,[c,i,Object(t["createElementVNode"])("div",s,[Object(t["createVNode"])(b,{data:e.data,props:e.defaultProps,onNodeClick:e.handleNodeClick},null,8,["data","props","onNodeClick"]),Object(t["createVNode"])(h,{"field-height":400,lang:"html"},{default:Object(t["withCtx"])(()=>[Object(t["createTextVNode"])(Object(t["toDisplayString"])(e.code1),1)]),_:1})])])}var h=l("8e21"),p="<el-tree :data=\"data\" :props=\"defaultProps\" @node-click=\"handleNodeClick\"></el-tree>\n\n<script>\n  export default {\n    data() {\n      return {\n        data: [{\n          label: 'Level one 1',\n          children: [{\n            label: 'Level two 1-1',\n            children: [{\n              label: 'Level three 1-1-1'\n            }]\n          }]\n        }, {\n          label: 'Level one 2',\n          children: [{\n            label: 'Level two 2-1',\n            children: [{\n              label: 'Level three 2-1-1'\n            }]\n          }, {\n            label: 'Level two 2-2',\n            children: [{\n              label: 'Level three 2-2-1'\n            }]\n          }]\n        }, {\n          label: 'Level one 3',\n          children: [{\n            label: 'Level two 3-1',\n            children: [{\n              label: 'Level three 3-1-1'\n            }]\n          }, {\n            label: 'Level two 3-2',\n            children: [{\n              label: 'Level three 3-2-1'\n            }]\n          }]\n        }],\n        defaultProps: {\n          children: 'children',\n          label: 'label'\n        }\n      };\n    },\n    methods: {\n      handleNodeClick(data) {\n        console.log(data);\n      }\n    }\n  };\n<\/script>",v="<el-tree\n  :props=\"props\"\n  :load=\"loadNode\"\n  lazy\n  show-checkbox\n  @check-change=\"handleCheckChange\">\n</el-tree>\n\n<script>\n  export default {\n    data() {\n      return {\n        props: {\n          label: 'name',\n          children: 'zones'\n        },\n        count: 1\n      };\n    },\n    methods: {\n      handleCheckChange(data, checked, indeterminate) {\n        console.log(data, checked, indeterminate);\n      },\n      handleNodeClick(data) {\n        console.log(data);\n      },\n      loadNode(node, resolve) {\n        if (node.level === 0) {\n          return resolve([{ name: 'Root1' }, { name: 'Root2' }]);\n        }\n        if (node.level > 3) return resolve([]);\n\n        var hasChild;\n        if (node.data.name === 'region1') {\n          hasChild = true;\n        } else if (node.data.name === 'region2') {\n          hasChild = false;\n        } else {\n          hasChild = Math.random() > 0.5;\n        }\n\n        setTimeout(() => {\n          var data;\n          if (hasChild) {\n            data = [{\n              name: 'zone' + this.count++\n            }, {\n              name: 'zone' + this.count++\n            }];\n          } else {\n            data = [];\n          }\n\n          resolve(data);\n        }, 500);\n      }\n    }\n  };\n<\/script>",u="<el-tree\n  :props=\"props\"\n  :load=\"loadNode\"\n  lazy\n  show-checkbox>\n</el-tree>\n\n<script>\n  export default {\n    data() {\n      return {\n        props: {\n          label: 'name',\n          children: 'zones',\n          isLeaf: 'leaf'\n        },\n      };\n    },\n    methods: {\n      loadNode(node, resolve) {\n        if (node.level === 0) {\n          return resolve([{ name: 'region' }]);\n        }\n        if (node.level > 1) return resolve([]);\n\n        setTimeout(() => {\n          const data = [{\n            name: 'leaf',\n            leaf: true\n          }, {\n            name: 'zone'\n          }];\n\n          resolve(data);\n        }, 500);\n      }\n    }\n  };\n<\/script>",m="<el-tree\n  :data=\"data\"\n  :props=\"defaultProps\"\n  show-checkbox>\n</el-tree>\n\n<script>\n  export default {\n    data() {\n      return {\n        data: [{\n          id: 1,\n          label: 'Level one 1',\n          children: [{\n            id: 3,\n            label: 'Level two 2-1',\n            children: [{\n              id: 4,\n              label: 'Level three 3-1-1'\n            }, {\n              id: 5,\n              label: 'Level three 3-1-2',\n              disabled: true\n            }]\n          }, {\n            id: 2,\n            label: 'Level two 2-2',\n            disabled: true,\n            children: [{\n              id: 6,\n              label: 'Level three 3-2-1'\n            }, {\n              id: 7,\n              label: 'Level three 3-2-2',\n              disabled: true\n            }]\n          }]\n        }],\n        defaultProps: {\n            children: 'children',\n            label: 'label',\n            disabled: 'disabled',\n        },\n      };\n    }\n  };\n<\/script>",g="<el-tree\n  :data=\"data\"\n  show-checkbox\n  node-key=\"id\"\n  :default-expanded-keys=\"[2, 3]\"\n  :default-checked-keys=\"[5]\"\n  :props=\"defaultProps\">\n</el-tree>\n\n<script>\n  export default {\n    data() {\n      return {\n        data: [{\n          id: 1,\n          label: 'Level one 1',\n          children: [{\n            id: 4,\n            label: 'Level two 1-1',\n            children: [{\n              id: 9,\n              label: 'Level three 1-1-1'\n            }, {\n              id: 10,\n              label: 'Level three 1-1-2'\n            }]\n          }]\n        }, {\n          id: 2,\n          label: 'Level one 2',\n          children: [{\n            id: 5,\n            label: 'Level two 2-1'\n          }, {\n            id: 6,\n            label: 'Level two 2-2'\n          }]\n        }, {\n          id: 3,\n          label: 'Level one 3',\n          children: [{\n            id: 7,\n            label: 'Level two 3-1'\n          }, {\n            id: 8,\n            label: 'Level two 3-2'\n          }]\n        }],\n        defaultProps: {\n          children: 'children',\n          label: 'label'\n        }\n      };\n    }\n  };\n<\/script>",O="<el-tree\n  :data=\"data\"\n  show-checkbox\n  default-expand-all\n  node-key=\"id\"\n  ref=\"tree\"\n  highlight-current\n  :props=\"defaultProps\">\n</el-tree>\n\n<div class=\"buttons\">\n  <el-button @click=\"getCheckedNodes\">get by node</el-button>\n  <el-button @click=\"getCheckedKeys\">get by key</el-button>\n  <el-button @click=\"setCheckedNodes\">set by node</el-button>\n  <el-button @click=\"setCheckedKeys\">set by key</el-button>\n  <el-button @click=\"resetChecked\">reset</el-button>\n</div>\n\n<script>\n  export default {\n    methods: {\n      getCheckedNodes() {\n        console.log(this.$refs.tree.getCheckedNodes());\n      },\n      getCheckedKeys() {\n        console.log(this.$refs.tree.getCheckedKeys());\n      },\n      setCheckedNodes() {\n        this.$refs.tree.setCheckedNodes([{\n          id: 5,\n          label: 'Level two 2-1'\n        }, {\n          id: 9,\n          label: 'Level three 1-1-1'\n        }]);\n      },\n      setCheckedKeys() {\n        this.$refs.tree.setCheckedKeys([3]);\n      },\n      resetChecked() {\n        this.$refs.tree.setCheckedKeys([]);\n      }\n    },\n\n    data() {\n      return {\n        data: [{\n          id: 1,\n          label: 'Level one 1',\n          children: [{\n            id: 4,\n            label: 'Level two 1-1',\n            children: [{\n              id: 9,\n              label: 'Level three 1-1-1'\n            }, {\n              id: 10,\n              label: 'Level three 1-1-2'\n            }]\n          }]\n        }, {\n          id: 2,\n          label: 'Level one 2',\n          children: [{\n            id: 5,\n            label: 'Level two 2-1'\n          }, {\n            id: 6,\n            label: 'Level two 2-2'\n          }]\n        }, {\n          id: 3,\n          label: 'Level one 3',\n          children: [{\n            id: 7,\n            label: 'Level two 3-1'\n          }, {\n            id: 8,\n            label: 'Level two 3-2'\n          }]\n        }],\n        defaultProps: {\n          children: 'children',\n          label: 'label'\n        }\n      };\n    }\n  };\n<\/script>",f='<div class="custom-tree-container">\n  <div class="block">\n    <p>Using render-content</p>\n    <el-tree\n      :data="data"\n      show-checkbox\n      node-key="id"\n      default-expand-all\n      :expand-on-click-node="false"\n      :render-content="renderContent">\n    </el-tree>\n  </div>\n  <div class="block">\n    <p>Using scoped slot</p>\n    <el-tree\n      :data="data"\n      show-checkbox\n      node-key="id"\n      default-expand-all\n      :expand-on-click-node="false">\n      <template #default="{ node, data }">\n        <span class="custom-tree-node">\n          <span>{{ node.label }}</span>\n          <span>\n            <a\n              @click="append(data)">\n              Append\n            </a>\n            <a\n              @click="remove(node, data)">\n              Delete\n            </a>\n          </span>\n        </span>\n      </template>\n    </el-tree>\n  </div>\n</div>\n\n<script>\n  let id = 1000;\n\n  export default {\n    data() {\n      const data = [{\n        id: 1,\n        label: \'Level one 1\',\n        children: [{\n          id: 4,\n          label: \'Level two 1-1\',\n          children: [{\n            id: 9,\n            label: \'Level three 1-1-1\'\n          }, {\n            id: 10,\n            label: \'Level three 1-1-2\'\n          }]\n        }]\n      }, {\n        id: 2,\n        label: \'Level one 2\',\n        children: [{\n          id: 5,\n          label: \'Level two 2-1\'\n        }, {\n          id: 6,\n          label: \'Level two 2-2\'\n        }]\n      }, {\n        id: 3,\n        label: \'Level one 3\',\n        children: [{\n          id: 7,\n          label: \'Level two 3-1\'\n        }, {\n          id: 8,\n          label: \'Level two 3-2\'\n        }]\n      }];\n      return {\n        data: JSON.parse(JSON.stringify(data)),\n      }\n    },\n\n    methods: {\n      append(data) {\n        const newChild = { id: id++, label: \'testtest\', children: [] };\n        if (!data.children) {\n          data.children = [];\n        }\n        data.children.push(newChild);\n        this.data = [...this.data]\n      },\n\n      remove(node, data) {\n        const parent = node.parent;\n        const children = parent.data.children || parent.data;\n        const index = children.findIndex(d => d.id === data.id);\n        children.splice(index, 1);\n        this.data = [...this.data]\n      },\n\n      renderContent(h, { node, data, store }) {\n        return h("span", {\n          class: "custom-tree-node"\n        }, h("span", null, node.label), h("span", null, h("a", {\n          onClick: () => this.append(data)\n        }, "Append "), h("a", {\n          onClick: () => this.remove(node, data)\n        }, "Delete")));\n      }\n    }\n  };\n<\/script>\n\n<style>\n  .custom-tree-node {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 14px;\n    padding-right: 8px;\n  }\n</style>',j="<el-input\n  placeholder=\"Filter keyword\"\n  v-model=\"filterText\">\n</el-input>\n\n<el-tree\n  class=\"filter-tree\"\n  :data=\"data\"\n  :props=\"defaultProps\"\n  default-expand-all\n  :filter-node-method=\"filterNode\"\n  ref=\"tree\">\n</el-tree>\n\n<script>\n  export default {\n    watch: {\n      filterText(val) {\n        this.$refs.tree.filter(val);\n      }\n    },\n\n    methods: {\n      filterNode(value, data) {\n        if (!value) return true;\n        return data.label.indexOf(value) !== -1;\n      }\n    },\n\n    data() {\n      return {\n        filterText: '',\n        data: [{\n          id: 1,\n          label: 'Level one 1',\n          children: [{\n            id: 4,\n            label: 'Level two 1-1',\n            children: [{\n              id: 9,\n              label: 'Level three 1-1-1'\n            }, {\n              id: 10,\n              label: 'Level three 1-1-2'\n            }]\n          }]\n        }, {\n          id: 2,\n          label: 'Level one 2',\n          children: [{\n            id: 5,\n            label: 'Level two 2-1'\n          }, {\n            id: 6,\n            label: 'Level two 2-2'\n          }]\n        }, {\n          id: 3,\n          label: 'Level one 3',\n          children: [{\n            id: 7,\n            label: 'Level two 3-1'\n          }, {\n            id: 8,\n            label: 'Level two 3-2'\n          }]\n        }],\n        defaultProps: {\n          children: 'children',\n          label: 'label'\n        }\n      };\n    }\n  };\n<\/script>",N="<el-tree\n  :data=\"data\"\n  :props=\"defaultProps\"\n  accordion\n  @node-click=\"handleNodeClick\">\n</el-tree>\n\n<script>\n  export default {\n    data() {\n      return {\n        data: [{\n          label: 'Level one 1',\n          children: [{\n            label: 'Level two 1-1',\n            children: [{\n              label: 'Level three 1-1-1'\n            }]\n          }]\n        }, {\n          label: 'Level one 2',\n          children: [{\n            label: 'Level two 2-1',\n            children: [{\n              label: 'Level three 2-1-1'\n            }]\n          }, {\n            label: 'Level two 2-2',\n            children: [{\n              label: 'Level three 2-2-1'\n            }]\n          }]\n        }, {\n          label: 'Level one 3',\n          children: [{\n            label: 'Level two 3-1',\n            children: [{\n              label: 'Level three 3-1-1'\n            }]\n          }, {\n            label: 'Level two 3-2',\n            children: [{\n              label: 'Level three 3-2-1'\n            }]\n          }]\n        }],\n        defaultProps: {\n          children: 'children',\n          label: 'label'\n        }\n      };\n    },\n    methods: {\n      handleNodeClick(data) {\n        console.log(data);\n      }\n    }\n  };\n<\/script>",L="<el-tree\n  :data=\"data\"\n  node-key=\"id\"\n  default-expand-all\n  @node-drag-start=\"handleDragStart\"\n  @node-drag-enter=\"handleDragEnter\"\n  @node-drag-leave=\"handleDragLeave\"\n  @node-drag-over=\"handleDragOver\"\n  @node-drag-end=\"handleDragEnd\"\n  @node-drop=\"handleDrop\"\n  draggable\n  :allow-drop=\"allowDrop\"\n  :allow-drag=\"allowDrag\">\n</el-tree>\n\n<script>\n  export default {\n    data() {\n      return {\n        data: [{\n          label: 'Level one 1',\n          children: [{\n            label: 'Level two 1-1',\n            children: [{\n              label: 'Level three 1-1-1'\n            }]\n          }]\n        }, {\n          label: 'Level one 2',\n          children: [{\n            label: 'Level two 2-1',\n            children: [{\n              label: 'Level three 2-1-1'\n            }]\n          }, {\n            label: 'Level two 2-2',\n            children: [{\n              label: 'Level three 2-2-1'\n            }]\n          }]\n        }, {\n          label: 'Level one 3',\n          children: [{\n            label: 'Level two 3-1',\n            children: [{\n              label: 'Level three 3-1-1'\n            }]\n          }, {\n            label: 'Level two 3-2',\n            children: [{\n              label: 'Level three 3-2-1'\n            }]\n          }]\n        }],\n        defaultProps: {\n          children: 'children',\n          label: 'label'\n        }\n      };\n    },\n    methods: {\n      handleDragStart(node, ev) {\n        console.log('drag start', node);\n      },\n      handleDragEnter(draggingNode, dropNode, ev) {\n        console.log('tree drag enter: ', dropNode.label);\n      },\n      handleDragLeave(draggingNode, dropNode, ev) {\n        console.log('tree drag leave: ', dropNode.label);\n      },\n      handleDragOver(draggingNode, dropNode, ev) {\n        console.log('tree drag over: ', dropNode.label);\n      },\n      handleDragEnd(draggingNode, dropNode, dropType, ev) {\n        console.log('tree drag end: ', dropNode && dropNode.label, dropType);\n      },\n      handleDrop(draggingNode, dropNode, dropType, ev) {\n        console.log('tree drop: ', dropNode.label, dropType);\n      },\n      allowDrop(draggingNode, dropNode, type) {\n        if (dropNode.data.label === 'Level two 3-1') {\n          return type !== 'inner';\n        } else {\n          return true;\n        }\n      },\n      allowDrag(draggingNode) {\n        return draggingNode.data.label.indexOf('Level three 3-1-1') === -1;\n      }\n    }\n  };\n<\/script>",C=Object(t["defineComponent"])({name:"basic-usage",data(){return{data:[{label:"Level one 1",children:[{label:"Level two 1-1",children:[{label:"Level three 1-1-1"}]}]},{label:"Level one 2",children:[{label:"Level two 2-1",children:[{label:"Level three 2-1-1"}]},{label:"Level two 2-2",children:[{label:"Level three 2-2-1"}]}]},{label:"Level one 3",children:[{label:"Level two 3-1",children:[{label:"Level three 3-1-1"}]},{label:"Level two 3-2",children:[{label:"Level three 3-2-1"}]}]}],defaultProps:{children:"children",label:"label"}}},methods:{handleNodeClick(e){console.log(e)}},components:{CodeHighlighter:h["a"]},setup(){return{code1:p}}}),k=l("d959"),w=l.n(k);const V=w()(C,[["render",b]]);var x=V;const E={class:"mb-10"},y=Object(t["createElementVNode"])("h2",{class:"anchor fw-bolder mb-5"},[Object(t["createElementVNode"])("a",{href:"#selectable"}),Object(t["createTextVNode"])(" Selectable ")],-1),D=Object(t["createElementVNode"])("div",{class:"py-5"}," Used for node selection. ",-1),T={class:"rounded border p-10"};function U(e,n,l,a,d,o){const r=Object(t["resolveComponent"])("el-tree"),c=Object(t["resolveComponent"])("CodeHighlighter");return Object(t["openBlock"])(),Object(t["createElementBlock"])("div",E,[y,D,Object(t["createElementVNode"])("div",T,[Object(t["createVNode"])(r,{props:e.props,load:e.loadNode,lazy:"","show-checkbox":"",onCheckChange:e.handleCheckChange},null,8,["props","load","onCheckChange"]),Object(t["createVNode"])(c,{"field-height":400,lang:"html"},{default:Object(t["withCtx"])(()=>[Object(t["createTextVNode"])(Object(t["toDisplayString"])(e.code2),1)]),_:1})])])}var B=Object(t["defineComponent"])({name:"selectable",data(){return{props:{label:"name",children:"zones"},count:1}},methods:{handleCheckChange(e,n,l){console.log(e,n,l)},handleNodeClick(e){console.log(e)},loadNode(e,n){if(0===e.level)return n([{name:"Root1"},{name:"Root2"}]);if(e.level>3)return n([]);let l;l="region1"===e.data.name||"region2"!==e.data.name&&Math.random()>.5,setTimeout(()=>{let e;e=l?[{name:"zone"+this.count++},{name:"zone"+this.count++}]:[],n(e)},500)}},components:{CodeHighlighter:h["a"]},setup(){return{code2:v}}});const P=w()(B,[["render",U]]);var I=P;const S={class:"mb-10"},z=Object(t["createElementVNode"])("h2",{class:"anchor fw-bolder mb-5"},[Object(t["createElementVNode"])("a",{href:"#custom-leaf-node-in-lazy-mode"}),Object(t["createTextVNode"])(" Custom leaf node in lazy mode ")],-1),H={class:"rounded border p-10"};function _(e,n,l,a,d,o){const r=Object(t["resolveComponent"])("el-tree"),c=Object(t["resolveComponent"])("CodeHighlighter");return Object(t["openBlock"])(),Object(t["createElementBlock"])("div",S,[z,Object(t["createElementVNode"])("div",H,[Object(t["createVNode"])(r,{props:e.props,load:e.loadNode,lazy:"","show-checkbox":""},null,8,["props","load"]),Object(t["createVNode"])(c,{"field-height":400,lang:"html"},{default:Object(t["withCtx"])(()=>[Object(t["createTextVNode"])(Object(t["toDisplayString"])(e.code3),1)]),_:1})])])}var K=Object(t["defineComponent"])({name:"custom-leaf-node-in-lazy-mode",data(){return{props:{label:"name",children:"zones",isLeaf:"leaf"}}},methods:{loadNode(e,n){return 0===e.level?n([{name:"region"}]):e.level>1?n([]):void setTimeout(()=>{const e=[{name:"leaf",leaf:!0},{name:"zone"}];n(e)},500)}},components:{CodeHighlighter:h["a"]},setup(){return{code3:u}}});const $=w()(K,[["render",_]]);var A=$;const J={class:"mb-10"},F=Object(t["createElementVNode"])("h2",{class:"anchor fw-bolder mb-5"},[Object(t["createElementVNode"])("a",{href:"#disabled-checkbox"}),Object(t["createTextVNode"])(" Disabled Checkbox ")],-1),M=Object(t["createElementVNode"])("div",{class:"py-5"}," The checkbox of a node can be set as disabled. ",-1),R={class:"rounded border p-10"};function Y(e,n,l,a,d,o){const r=Object(t["resolveComponent"])("el-tree"),c=Object(t["resolveComponent"])("CodeHighlighter");return Object(t["openBlock"])(),Object(t["createElementBlock"])("div",J,[F,M,Object(t["createElementVNode"])("div",R,[Object(t["createVNode"])(r,{data:e.data,props:e.defaultProps,"show-checkbox":""},null,8,["data","props"]),Object(t["createVNode"])(c,{"field-height":400,lang:"html"},{default:Object(t["withCtx"])(()=>[Object(t["createTextVNode"])(Object(t["toDisplayString"])(e.code4),1)]),_:1})])])}var q=Object(t["defineComponent"])({name:"disabled-checkbox",data(){return{data:[{id:1,label:"Level one 1",children:[{id:3,label:"Level two 2-1",children:[{id:4,label:"Level three 3-1-1"},{id:5,label:"Level three 3-1-2",disabled:!0}]},{id:2,label:"Level two 2-2",disabled:!0,children:[{id:6,label:"Level three 3-2-1"},{id:7,label:"Level three 3-2-2",disabled:!0}]}]}],defaultProps:{children:"children",label:"label",disabled:"disabled"}}},components:{CodeHighlighter:h["a"]},setup(){return{code4:m}}});const G=w()(q,[["render",Y]]);var Q=G;const W={class:"mb-10"},X=Object(t["createElementVNode"])("h2",{class:"anchor fw-bolder mb-5"},[Object(t["createElementVNode"])("a",{href:"#default-expanded-and-default-checked"}),Object(t["createTextVNode"])(" Default expanded and default checked ")],-1),Z=Object(t["createElementVNode"])("div",{class:"py-5"}," Tree nodes can be initially expanded or checked ",-1),ee={class:"rounded border p-10"};function ne(e,n,l,a,d,o){const r=Object(t["resolveComponent"])("el-tree"),c=Object(t["resolveComponent"])("CodeHighlighter");return Object(t["openBlock"])(),Object(t["createElementBlock"])("div",W,[X,Z,Object(t["createElementVNode"])("div",ee,[Object(t["createVNode"])(r,{data:e.data,"show-checkbox":"","node-key":"id","default-expanded-keys":[2,3],"default-checked-keys":[5],props:e.defaultProps},null,8,["data","props"]),Object(t["createVNode"])(c,{"field-height":400,lang:"html"},{default:Object(t["withCtx"])(()=>[Object(t["createTextVNode"])(Object(t["toDisplayString"])(e.code5),1)]),_:1})])])}var le=Object(t["defineComponent"])({name:"default-expanded-and-default-checked",data(){return{data:[{id:1,label:"Level one 1",children:[{id:4,label:"Level two 1-1",children:[{id:9,label:"Level three 1-1-1"},{id:10,label:"Level three 1-1-2"}]}]},{id:2,label:"Level one 2",children:[{id:5,label:"Level two 2-1"},{id:6,label:"Level two 2-2"}]},{id:3,label:"Level one 3",children:[{id:7,label:"Level two 3-1"},{id:8,label:"Level two 3-2"}]}],defaultProps:{children:"children",label:"label"}}},components:{CodeHighlighter:h["a"]},setup(){return{code5:g}}});const te=w()(le,[["render",ne]]);var ae=te;const de={class:"mb-10"},oe=Object(t["createElementVNode"])("h2",{class:"anchor fw-bolder mb-5"},[Object(t["createElementVNode"])("a",{href:"#checking-tree-nodes"}),Object(t["createTextVNode"])(" Checking tree nodes ")],-1),re={class:"rounded border p-10"},ce={class:"buttons"},ie=Object(t["createTextVNode"])("get by node"),se=Object(t["createTextVNode"])("get by key"),be=Object(t["createTextVNode"])("set by node"),he=Object(t["createTextVNode"])("set by key"),pe=Object(t["createTextVNode"])("reset");function ve(e,n,l,a,d,o){const r=Object(t["resolveComponent"])("el-tree"),c=Object(t["resolveComponent"])("el-button"),i=Object(t["resolveComponent"])("CodeHighlighter");return Object(t["openBlock"])(),Object(t["createElementBlock"])("div",de,[oe,Object(t["createElementVNode"])("div",re,[Object(t["createVNode"])(r,{data:e.data,"show-checkbox":"","default-expand-all":"","node-key":"id",ref:"tree","highlight-current":"",props:e.defaultProps},null,8,["data","props"]),Object(t["createElementVNode"])("div",ce,[Object(t["createVNode"])(c,{onClick:e.getCheckedNodes},{default:Object(t["withCtx"])(()=>[ie]),_:1},8,["onClick"]),Object(t["createVNode"])(c,{onClick:e.getCheckedKeys},{default:Object(t["withCtx"])(()=>[se]),_:1},8,["onClick"]),Object(t["createVNode"])(c,{onClick:e.setCheckedNodes},{default:Object(t["withCtx"])(()=>[be]),_:1},8,["onClick"]),Object(t["createVNode"])(c,{onClick:e.setCheckedKeys},{default:Object(t["withCtx"])(()=>[he]),_:1},8,["onClick"]),Object(t["createVNode"])(c,{onClick:e.resetChecked},{default:Object(t["withCtx"])(()=>[pe]),_:1},8,["onClick"])]),Object(t["createVNode"])(i,{"field-height":400,lang:"html"},{default:Object(t["withCtx"])(()=>[Object(t["createTextVNode"])(Object(t["toDisplayString"])(e.code6),1)]),_:1})])])}var ue=Object(t["defineComponent"])({name:"checking-tree-nodes",methods:{getCheckedNodes(){console.log(this.$refs.tree.getCheckedNodes())},getCheckedKeys(){console.log(this.$refs.tree.getCheckedKeys())},setCheckedNodes(){this.$refs.tree.setCheckedNodes([{id:5,label:"Level two 2-1"},{id:9,label:"Level three 1-1-1"}])},setCheckedKeys(){this.$refs.tree.setCheckedKeys([3])},resetChecked(){this.$refs.tree.setCheckedKeys([])}},data(){return{data:[{id:1,label:"Level one 1",children:[{id:4,label:"Level two 1-1",children:[{id:9,label:"Level three 1-1-1"},{id:10,label:"Level three 1-1-2"}]}]},{id:2,label:"Level one 2",children:[{id:5,label:"Level two 2-1"},{id:6,label:"Level two 2-2"}]},{id:3,label:"Level one 3",children:[{id:7,label:"Level two 3-1"},{id:8,label:"Level two 3-2"}]}],defaultProps:{children:"children",label:"label"}}},components:{CodeHighlighter:h["a"]},setup(){return{code6:O}}});const me=w()(ue,[["render",ve]]);var ge=me;const Oe={class:"mb-10"},fe=Object(t["createElementVNode"])("h2",{class:"anchor fw-bolder mb-5"},[Object(t["createElementVNode"])("a",{href:"#custom-node-content"}),Object(t["createTextVNode"])(" Custom node content ")],-1),je=Object(t["createElementVNode"])("div",{class:"py-5"}," The content of tree nodes can be customized, so you can add icons or buttons as you will ",-1),Ne={class:"rounded border p-10"},Le={class:"custom-tree-container"},Ce={class:"block"},ke=Object(t["createElementVNode"])("p",null,"Using render-content",-1),we={class:"block"},Ve=Object(t["createElementVNode"])("p",null,"Using scoped slot",-1),xe={class:"custom-tree-node"},Ee=["onClick"],ye=["onClick"];function De(e,n,l,a,d,o){const r=Object(t["resolveComponent"])("el-tree"),c=Object(t["resolveComponent"])("CodeHighlighter");return Object(t["openBlock"])(),Object(t["createElementBlock"])("div",Oe,[fe,je,Object(t["createElementVNode"])("div",Ne,[Object(t["createElementVNode"])("div",Le,[Object(t["createElementVNode"])("div",Ce,[ke,Object(t["createVNode"])(r,{data:e.data,"show-checkbox":"","node-key":"id","default-expand-all":"","expand-on-click-node":!1,"render-content":e.renderContent},null,8,["data","render-content"])]),Object(t["createElementVNode"])("div",we,[Ve,Object(t["createVNode"])(r,{data:e.data,"show-checkbox":"","node-key":"id","default-expand-all":"","expand-on-click-node":!1},{default:Object(t["withCtx"])(({node:n,data:l})=>[Object(t["createElementVNode"])("span",xe,[Object(t["createElementVNode"])("span",null,Object(t["toDisplayString"])(n.label),1),Object(t["createElementVNode"])("span",null,[Object(t["createElementVNode"])("a",{onClick:n=>e.append(l)}," Append ",8,Ee),Object(t["createElementVNode"])("a",{onClick:t=>e.remove(n,l)}," Delete ",8,ye)])])]),_:1},8,["data"])])]),Object(t["createVNode"])(c,{"field-height":400,lang:"html"},{default:Object(t["withCtx"])(()=>[Object(t["createTextVNode"])(Object(t["toDisplayString"])(e.code7),1)]),_:1})])])}let Te=1e3;var Ue=Object(t["defineComponent"])({name:"custom-node-content",components:{CodeHighlighter:h["a"]},data(){const e=[{id:1,label:"Level one 1",children:[{id:4,label:"Level two 1-1",children:[{id:9,label:"Level three 1-1-1"},{id:10,label:"Level three 1-1-2"}]}]},{id:2,label:"Level one 2",children:[{id:5,label:"Level two 2-1"},{id:6,label:"Level two 2-2"}]},{id:3,label:"Level one 3",children:[{id:7,label:"Level two 3-1"},{id:8,label:"Level two 3-2"}]}];return{data:JSON.parse(JSON.stringify(e))}},methods:{append(e){const n={id:Te++,label:"testtest",children:[]};e.children||(e.children=[]),e.children.push(n),this.data=[...this.data]},remove(e,n){const l=e.parent,t=l.data.children||l.data,a=t.findIndex(e=>e.id===n.id);t.splice(a,1),this.data=[...this.data]},renderContent(e,{node:n,data:l,store:t}){return e("span",{class:"custom-tree-node"},e("span",null,n.label),e("span",null,e("a",{onClick:()=>this.append(l)},"Append "),e("a",{onClick:()=>this.remove(n,l)},"Delete")))}},setup(){return{code7:f}}});l("1a0c");const Be=w()(Ue,[["render",De]]);var Pe=Be;const Ie={class:"mb-10"},Se=Object(t["createElementVNode"])("h2",{class:"anchor fw-bolder mb-5"},[Object(t["createElementVNode"])("a",{href:"#tree-node-filtering"}),Object(t["createTextVNode"])(" Tree node filtering ")],-1),ze=Object(t["createElementVNode"])("div",{class:"py-5"}," Tree nodes can be filtered ",-1),He={class:"rounded border p-10"};function _e(e,n,l,a,d,o){const r=Object(t["resolveComponent"])("el-input"),c=Object(t["resolveComponent"])("el-tree"),i=Object(t["resolveComponent"])("CodeHighlighter");return Object(t["openBlock"])(),Object(t["createElementBlock"])("div",Ie,[Se,ze,Object(t["createElementVNode"])("div",He,[Object(t["createVNode"])(r,{placeholder:"Filter keyword",modelValue:e.filterText,"onUpdate:modelValue":n[0]||(n[0]=n=>e.filterText=n)},null,8,["modelValue"]),Object(t["createVNode"])(c,{class:"filter-tree",data:e.data,props:e.defaultProps,"default-expand-all":"","filter-node-method":e.filterNode,ref:"tree"},null,8,["data","props","filter-node-method"]),Object(t["createVNode"])(i,{"field-height":400,lang:"html"},{default:Object(t["withCtx"])(()=>[Object(t["createTextVNode"])(Object(t["toDisplayString"])(e.code8),1)]),_:1})])])}var Ke=Object(t["defineComponent"])({name:"tree-node-filtering",watch:{filterText(e){this.$refs.tree.filter(e)}},methods:{filterNode(e,n){return!e||-1!==n.label.indexOf(e)}},data(){return{filterText:"",data:[{id:1,label:"Level one 1",children:[{id:4,label:"Level two 1-1",children:[{id:9,label:"Level three 1-1-1"},{id:10,label:"Level three 1-1-2"}]}]},{id:2,label:"Level one 2",children:[{id:5,label:"Level two 2-1"},{id:6,label:"Level two 2-2"}]},{id:3,label:"Level one 3",children:[{id:7,label:"Level two 3-1"},{id:8,label:"Level two 3-2"}]}],defaultProps:{children:"children",label:"label"}}},components:{CodeHighlighter:h["a"]},setup(){return{code8:j}}});const $e=w()(Ke,[["render",_e]]);var Ae=$e;const Je={class:"mb-10"},Fe=Object(t["createElementVNode"])("h2",{class:"anchor fw-bolder mb-5"},[Object(t["createElementVNode"])("a",{href:"#accordion"}),Object(t["createTextVNode"])(" Accordion ")],-1),Me=Object(t["createElementVNode"])("div",{class:"py-5"}," Only one node among the same level can be expanded at one time. ",-1),Re={class:"rounded border p-10"};function Ye(e,n,l,a,d,o){const r=Object(t["resolveComponent"])("el-tree"),c=Object(t["resolveComponent"])("CodeHighlighter");return Object(t["openBlock"])(),Object(t["createElementBlock"])("div",Je,[Fe,Me,Object(t["createElementVNode"])("div",Re,[Object(t["createVNode"])(r,{data:e.data,props:e.defaultProps,accordion:"",onNodeClick:e.handleNodeClick},null,8,["data","props","onNodeClick"]),Object(t["createVNode"])(c,{"field-height":400,lang:"html"},{default:Object(t["withCtx"])(()=>[Object(t["createTextVNode"])(Object(t["toDisplayString"])(e.code9),1)]),_:1})])])}var qe=Object(t["defineComponent"])({name:"accordion",data(){return{data:[{label:"Level one 1",children:[{label:"Level two 1-1",children:[{label:"Level three 1-1-1"}]}]},{label:"Level one 2",children:[{label:"Level two 2-1",children:[{label:"Level three 2-1-1"}]},{label:"Level two 2-2",children:[{label:"Level three 2-2-1"}]}]},{label:"Level one 3",children:[{label:"Level two 3-1",children:[{label:"Level three 3-1-1"}]},{label:"Level two 3-2",children:[{label:"Level three 3-2-1"}]}]}],defaultProps:{children:"children",label:"label"}}},methods:{handleNodeClick(e){console.log(e)}},components:{CodeHighlighter:h["a"]},setup(){return{code9:N}}});const Ge=w()(qe,[["render",Ye]]);var Qe=Ge;const We={class:"mb-10"},Xe=Object(t["createElementVNode"])("h2",{class:"anchor fw-bolder mb-5"},[Object(t["createElementVNode"])("a",{href:"#draggable"}),Object(t["createTextVNode"])(" Draggable ")],-1),Ze=Object(t["createElementVNode"])("div",{class:"py-5"},[Object(t["createTextVNode"])(" You can drag and drop Tree nodes by adding a "),Object(t["createElementVNode"])("code",null,"draggable"),Object(t["createTextVNode"])(" attribute. ")],-1),en={class:"rounded border p-10"};function nn(e,n,l,a,d,o){const r=Object(t["resolveComponent"])("el-tree"),c=Object(t["resolveComponent"])("CodeHighlighter");return Object(t["openBlock"])(),Object(t["createElementBlock"])("div",We,[Xe,Ze,Object(t["createElementVNode"])("div",en,[Object(t["createVNode"])(r,{data:e.data,"node-key":"id","default-expand-all":"",onNodeDragStart:e.handleDragStart,onNodeDragEnter:e.handleDragEnter,onNodeDragLeave:e.handleDragLeave,onNodeDragOver:e.handleDragOver,onNodeDragEnd:e.handleDragEnd,onNodeDrop:e.handleDrop,draggable:"","allow-drop":e.allowDrop,"allow-drag":e.allowDrag},null,8,["data","onNodeDragStart","onNodeDragEnter","onNodeDragLeave","onNodeDragOver","onNodeDragEnd","onNodeDrop","allow-drop","allow-drag"]),Object(t["createVNode"])(c,{"field-height":400,lang:"html"},{default:Object(t["withCtx"])(()=>[Object(t["createTextVNode"])(Object(t["toDisplayString"])(e.code10),1)]),_:1})])])}var ln=Object(t["defineComponent"])({name:"draggable",data(){return{data:[{label:"Level one 1",children:[{label:"Level two 1-1",children:[{label:"Level three 1-1-1"}]}]},{label:"Level one 2",children:[{label:"Level two 2-1",children:[{label:"Level three 2-1-1"}]},{label:"Level two 2-2",children:[{label:"Level three 2-2-1"}]}]},{label:"Level one 3",children:[{label:"Level two 3-1",children:[{label:"Level three 3-1-1"}]},{label:"Level two 3-2",children:[{label:"Level three 3-2-1"}]}]}],defaultProps:{children:"children",label:"label"}}},methods:{handleDragStart(e,n){console.log("drag start",e)},handleDragEnter(e,n,l){console.log("tree drag enter: ",n.label)},handleDragLeave(e,n,l){console.log("tree drag leave: ",n.label)},handleDragOver(e,n,l){console.log("tree drag over: ",n.label)},handleDragEnd(e,n,l,t){console.log("tree drag end: ",n&&n.label,l)},handleDrop(e,n,l,t){console.log("tree drop: ",n.label,l)},allowDrop(e,n,l){return"Level two 3-1"!==n.data.label||"inner"!==l},allowDrag(e){return-1===e.data.label.indexOf("Level three 3-1-1")}},components:{CodeHighlighter:h["a"]},setup(){return{code10:L}}});const tn=w()(ln,[["render",nn]]);var an=tn,dn=Object(t["defineComponent"])({name:"tree",components:{EUIBasicUsage:x,EUISelectable:I,EUICustomLeafNodeInLazyMode:A,EUIDisabledCheckbox:Q,EUIDefaultExpandedAndDefaultChecked:ae,EUICheckingTreeNodes:ge,EUICustomNodeContent:Pe,EUITreeNodeFiltering:Ae,EUIAccordion:Qe,EUIDraggable:an},setup(){Object(o["b"])("Tree")}});const on=w()(dn,[["render",d]]);n["default"]=on}}]);
//# sourceMappingURL=chunk-5b15b95b.92220b25.js.map