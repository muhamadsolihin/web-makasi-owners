{"version":3,"sources":["webpack:///./src/assets/ts/components/_DrawerOptions.ts","webpack:///./src/view/pages/resources/Documentation.vue?a7aa","webpack:///./src/view/pages/resources/Documentation.vue","webpack:///./src/view/pages/resources/Documentation.vue?76f9"],"names":["defaultDrawerOptions","overlay","baseClass","overlayClass","direction","_element","options","overlayElement","toggleElement","name","shown","lastWidth","closeElement","_handlers","togglers","_getOption","closers","length","on","document","body","e","preventDefault","getElementById","_toggle","_hide","_update","width","String","hasBaseClass","element","classList","contains","bodyCanvasAttr","getAttribute","add","set","parseInt","remove","attr","value","optionName","option","trigger","_show","_deleteOverlay","removeAttribute","_createOverlay","setAttribute","createElement","elementZIndex","overlayZindex","append","overlayClassOption","toString","addEventListener","parentNode","removeChild","_getDirection","_getWidth","toggle","show","hide","isShown","update","goElement","handler","one","off","event","this","Object","assign","instanceUid","createInstances","selector","elements","querySelectorAll","forEach","item","drawer","DrawerComponent","getInstance","initGlobalHandlers","window","timer","el","instance","hasInstace","has","get","hideAll","oldInstances","getAllInstancesByKey","dr","updateAll","bootstrap","reinitialization","render","_ctx","_cache","$props","$setup","$data","$options","_component_router_view","components","setup","console","log","__exports__"],"mappings":"kHAAA,8JAoBMA,EAAsC,CAC1CC,SAAS,EACTC,UAAW,SACXC,aAAc,iBACdC,UAAW,OAGb,aAWE,WAAYC,EAAuBC,GAAnC,WATA,KAAAC,eAAqC,KACrC,KAAAC,cAAoC,KAGpC,KAAAC,KAAe,GACf,KAAAC,OAAiB,EACjB,KAAAC,UAAoB,EACpB,KAAAC,aAAmC,KAkB3B,KAAAC,UAAY,WAClB,IAAMC,EAAW,EAAKC,WAAW,UAC3BC,EAAU,EAAKD,WAAW,SAEf,OAAbD,GAAqBA,EAASG,OAAS,GACzC,OAAoBC,GAAGC,SAASC,KAAMN,EAAU,SAAS,SAACO,GACxDA,EAAEC,iBACF,EAAKd,cAAgBW,SAASI,eAAeT,GAC7C,EAAKU,aAIO,OAAZR,GAAoBA,EAAQC,OAAS,GACvC,OAAoBC,GAAGC,SAASC,KAAMJ,EAAS,SAAS,SAACK,GACvDA,EAAEC,iBACF,EAAKV,aAAeO,SAASI,eAAeP,GAE5C,EAAKS,YAKH,KAAAC,QAAU,WAChB,IAAMC,EAAQC,OAAO,EAAKb,WAAW,UAC/BX,EAAYwB,OAAO,EAAKb,WAAW,cAGnCc,EAAe,EAAKC,QAAQC,UAAUC,SACxC,UAAG,EAAK1B,QAAQJ,UAAS,QAEvB+B,EAAiBL,OACnBT,SAASC,KAAKc,aAAa,yBAAkB,EAAKzB,KAAI,OAIxD,EAAKC,OADc,IAAjBmB,GAA4C,OAAnBI,GAOO,IAAhC,EAAKlB,WAAW,aAClB,EAAKe,QAAQC,UAAUI,IAAI,EAAK7B,QAAQJ,WACxC,EAAK4B,QAAQC,UAAUI,IACnB,UAAG,EAAK7B,QAAQJ,UAAS,YAAIE,IAEjC,OAAiBgC,IAAI,EAAKN,QAAS,QAASH,GAAO,GAGnD,EAAKhB,UAAY0B,SAASV,KAE1B,OAAiBS,IAAI,EAAKN,QAAS,QAAS,IAC5C,EAAKA,QAAQC,UAAUO,OAAO,EAAKhC,QAAQJ,WAC3C,EAAK4B,QAAQC,UAAUO,OACnB,UAAG,EAAKhC,QAAQJ,UAAS,YAAIE,IAEjC,EAAKqB,UAID,KAAAV,WAAa,SAACN,GACpB,IAAM8B,EAAO,EAAKT,QAAQI,aAAa,yBAAkBzB,IACzD,GAAI8B,EAAM,CACR,IAAIC,EAAQ,eAA8BD,GAC1C,OAAc,OAAVC,GAAoC,SAAlBZ,OAAOY,KAGb,OAAVA,GAAoC,UAAlBZ,OAAOY,KAKxBA,EAEP,IAAMC,EAAa,eAAmBhC,GAChCiC,EAAS,eAA4B,EAAKpC,QAASmC,GACzD,OAAIC,EACK,eAA8BA,GAE9B,MAKL,KAAAlB,QAAU,YAEmD,IAA/D,OAAiBmB,QAAQ,EAAKb,QAAS,sBAKvC,EAAKpB,MACP,EAAKe,QAEL,EAAKmB,QAGP,OAAiBD,QAAQ,EAAKb,QAAS,uBAGjC,KAAAL,MAAQ,YACmD,IAA7D,OAAiBkB,QAAQ,EAAKb,QAAS,oBAI3C,EAAKpB,OAAQ,EACb,EAAKmC,iBACL1B,SAASC,KAAK0B,gBAAgB,yBAAkB,EAAKrC,OACrDU,SAASC,KAAK0B,gBAAgB,kBAC9B,EAAKhB,QAAQC,UAAUO,OAAO,UAAG,EAAKhC,QAAQJ,UAAS,QAC7B,MAAtB,EAAKM,eACP,EAAKA,cAAcuB,UAAUO,OAAO,UAGtC,OAAiBK,QAAQ,EAAKb,QAAS,4BAGjC,KAAAc,MAAQ,YACmD,IAA7D,OAAiBD,QAAQ,EAAKb,QAAS,oBAI3C,EAAKpB,OAAQ,EACb,EAAKqC,iBACL5B,SAASC,KAAK4B,aAAa,yBAAkB,EAAKvC,MAAQ,MAC1DU,SAASC,KAAK4B,aAAa,iBAAkB,MAC7C,EAAKlB,QAAQC,UAAUI,IAAI,UAAG,EAAK7B,QAAQJ,UAAS,QACzB,OAAvB,EAAKM,eACP,EAAKA,cAAcuB,UAAUI,IAAI,UAGnC,OAAiBQ,QAAQ,EAAKb,QAAS,qBAGjC,KAAAiB,eAAiB,WACvB,IAAmC,IAA/B,EAAKhC,WAAW,WAAqB,CACvC,EAAKR,eAAiBY,SAAS8B,cAAc,OAC7C,IAAMC,EAAgB,eAAO,EAAKpB,QAAS,WAC3C,GAAIoB,EAAe,CACjB,IAAMC,EAAgBd,SAASa,GAAiB,EAChD,OAAiBd,IAAI,EAAK7B,eAAgB,UAAW4C,GAEvDhC,SAASC,KAAKgC,OAAO,EAAK7C,gBAC1B,IAAM8C,EAAqB,EAAKtC,WAAW,iBACvCsC,GACF,EAAK9C,eAAewB,UAAUI,IAAIkB,EAAmBC,YAEvD,EAAK/C,eAAegD,iBAAiB,SAAS,SAAClC,GAC7CA,EAAEC,iBACF,EAAKG,aAKH,KAAAoB,eAAiB,WACK,OAAxB,EAAKtC,gBAA2B,EAAKA,eAAeiD,YACtD,EAAKjD,eAAeiD,WAAWC,YAAY,EAAKlD,iBAI5C,KAAAmD,cAAgB,WACtB,MAAgD,SAAzC9B,OAAO,EAAKb,WAAW,cAA2B,OAAS,SAG5D,KAAA4C,UAAY,WAClB,IAAIhC,EAAQ,EAAKZ,WAAW,SAK5B,OAJIY,GAAmB,SAAVA,IACXA,EAAQ,eAAO,EAAKG,QAAS,UAGxBH,GAMF,KAAAiC,OAAS,WACd,EAAKpC,WAGA,KAAAqC,KAAO,WACZ,EAAKjB,SAGA,KAAAkB,KAAO,WACZ,EAAKrC,SAGA,KAAAsC,QAAU,WACf,OAAO,EAAKrD,OAGP,KAAAsD,OAAS,WACd,EAAKtC,WAGA,KAAAuC,UAAY,WACjB,OAAO,EAAKnC,SAIP,KAAAZ,GAAK,SAACT,EAAcyD,GACzB,OAAO,OAAiBhD,GAAG,EAAKY,QAASrB,EAAMyD,IAG1C,KAAAC,IAAM,SAAC1D,EAAcyD,GAC1B,OAAO,OAAiBC,IAAI,EAAKrC,QAASrB,EAAMyD,IAG3C,KAAAE,IAAM,SAAC3D,GACZ,OAAO,OAAiB2D,IAAI,EAAKtC,QAASrB,IAGrC,KAAAkC,QAAU,SAAClC,EAAc4D,GAC9B,OAAO,OAAiB1B,QAAQ,EAAKb,QAASrB,EAAM4D,IArOpDC,KAAKxC,QAAUzB,EACfiE,KAAKhE,QAAUiE,OAAOC,OAAOxE,EAAsBM,GACnDgE,KAAKG,YAAc,eAAsB,UACzCH,KAAK/D,eAAiB,KACtB+D,KAAK7D,KAAO6D,KAAKxC,QAAQI,aAAa,wBAA0B,GAChEoC,KAAK5D,OAAQ,EACb4D,KAAK9D,cAAgB,KAErB8D,KAAKzD,YAELyD,KAAK5C,UAEL,OAASU,IAAIkC,KAAKxC,QAAS,SAAUwC,MAmSzC,OA/CgB,EAAAI,gBAAd,SAA8BC,GAC5B,IAAMC,EAAWzD,SAASC,KAAKyD,iBAAiBF,GAChDC,EAASE,SAAQ,SAAChD,GAChB,IAAMiD,EAAOjD,EACTkD,EAASC,EAAgBC,YAAYH,GACpCC,IACHA,EAAS,IAAIC,EAAgBF,EAAM/E,IAErCgF,EAAOlB,WAKG,EAAAqB,mBAAd,WAEEC,OAAO7B,iBAAiB,UAAU,WAChC,IAAI8B,EACJ,eACIA,GACA,WAEE,IAAMT,EAAWzD,SAASC,KAAKyD,iBAC3B,2BAEJD,EAASE,SAAQ,SAACQ,GAChB,IAAMP,EAAOO,EACPC,EAAWN,EAAgBC,YAAYH,GACzCQ,GACFA,EAASvB,cAIf,SAvDM,EAAAwB,WAAa,SAAC1D,GAC1B,OAAO,OAAS2D,IAAI3D,EAAS,WAGjB,EAAAoD,YAAc,SAACpD,GAC3B,OAAO,OAAS4D,IAAI5D,EAAS,WAGjB,EAAA6D,QAAU,WACtB,IAAMC,EAAe,OAASC,qBAAqB,UACnDD,EAAad,SAAQ,SAAAgB,GACnBA,EAAGhC,WAIO,EAAAiC,UAAY,WACxB,IAAMH,EAAe,OAASC,qBAAqB,UACnDD,EAAad,SAAQ,SAAAgB,GACnBA,EAAG9B,aA0CO,EAAAgC,UAAY,WACxBf,EAAgBP,gBAAgB,2BAChCO,EAAgBE,sBAGJ,EAAAc,iBAAmB,WAC/BhB,EAAgBP,gBAAgB,2BAChCO,EAAgBU,UAChBV,EAAgBc,aAEpB,EA3TA,I,yDCzBO,SAASG,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,IAAMC,EAAyB,8BAAkB,eAEjD,OAAQ,yBAAc,yBAAaA,G,gBCDtB,+BAAgB,CAC7BhG,KAAM,gBACNiG,WAAY,GACZC,MAAK,WACH,wBAAU,WACRC,QAAQC,IAAI,WACZ,OAAgBZ,sBAGlB,wBAAU,WACRW,QAAQC,IAAI,WACZ,OAAgBZ,yB,qBCVtB,MAAMa,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASZ,KAErD","file":"js/chunk-92fe22e8.153df02b.js","sourcesContent":["import { DataUtil } from \"../_utils/_DataUtil\";\r\n// Utils\r\nimport { EventHandlerUtil } from \"../_utils/EventHandlerUtil\";\r\n// Helpers\r\nimport { getUniqueIdWithPrefix } from \"../_utils/helpers/types-helpers/_getUniqueIdWithPrefix\";\r\nimport { getObjectPropertyValueByKey } from \"../_utils/helpers/types-helpers/_getObjectPropertyValueByKey\";\r\nimport { stringSnakeToCamel } from \"../_utils/helpers/types-helpers/_stringSnakeToCamel\";\r\nimport { getAttributeValueByBreakpoint } from \"../_utils/helpers/getAttributeValueByBreakpoint\";\r\nimport { throttle } from \"../_utils/helpers/dom-helpers/_throttle\";\r\nimport { DOMEventHandlerUtil } from \"../_utils/_DOMEventHandlerUtil\";\r\nimport { ElementStyleUtil } from \"../_utils/_ElementStyleUtil\";\r\nimport { getCSS } from \"../_utils/helpers/dom-helpers/_getCSS\";\r\n\r\nexport interface DrawerOptions {\r\n  overlay: boolean;\r\n  baseClass: string;\r\n  overlayClass: string;\r\n  direction: string;\r\n}\r\n\r\nconst defaultDrawerOptions: DrawerOptions = {\r\n  overlay: true,\r\n  baseClass: \"drawer\",\r\n  overlayClass: \"drawer-overlay\",\r\n  direction: \"end\",\r\n};\r\n\r\nclass DrawerComponent {\r\n  element: HTMLElement;\r\n  overlayElement: HTMLElement | null = null;\r\n  toggleElement: HTMLElement | null = null;\r\n  options: DrawerOptions;\r\n  instanceUid: string;\r\n  name: string = \"\";\r\n  shown: boolean = false;\r\n  lastWidth: number = 0;\r\n  closeElement: HTMLElement | null = null;\r\n\r\n  constructor(_element: HTMLElement, options: DrawerOptions) {\r\n    this.element = _element;\r\n    this.options = Object.assign(defaultDrawerOptions, options);\r\n    this.instanceUid = getUniqueIdWithPrefix(\"drawer\");\r\n    this.overlayElement = null;\r\n    this.name = this.element.getAttribute(\"data-kt-drawer-name\") || \"\";\r\n    this.shown = false;\r\n    this.toggleElement = null;\r\n    // Event Handlers\r\n    this._handlers();\r\n    // Update Instance\r\n    this._update();\r\n    // Bind Instance\r\n    DataUtil.set(this.element, \"drawer\", this);\r\n  }\r\n\r\n  private _handlers = () => {\r\n    const togglers = this._getOption(\"toggle\") as string;\r\n    const closers = this._getOption(\"close\") as string;\r\n\r\n    if (togglers !== null && togglers.length > 0) {\r\n      DOMEventHandlerUtil.on(document.body, togglers, \"click\", (e: Event) => {\r\n        e.preventDefault();\r\n        this.toggleElement = document.getElementById(togglers);\r\n        this._toggle();\r\n      });\r\n    }\r\n\r\n    if (closers !== null && closers.length > 0) {\r\n      DOMEventHandlerUtil.on(document.body, closers, \"click\", (e: Event) => {\r\n        e.preventDefault();\r\n        this.closeElement = document.getElementById(closers);\r\n\r\n        this._hide();\r\n      });\r\n    }\r\n  };\r\n\r\n  private _update = () => {\r\n    const width = String(this._getOption(\"width\"));\r\n    const direction = String(this._getOption('direction'));\r\n\r\n    // Reset state\r\n    const hasBaseClass = this.element.classList.contains(\r\n        `${this.options.baseClass}-on`\r\n    );\r\n    const bodyCanvasAttr = String(\r\n        document.body.getAttribute(`data-kt-drawer-${this.name}-`)\r\n    );\r\n\r\n    if (hasBaseClass === true && bodyCanvasAttr === \"on\") {\r\n      this.shown = true;\r\n    } else {\r\n      this.shown = false;\r\n    }\r\n\r\n    // Activate/deactivate\r\n    if (this._getOption(\"activate\") === true) {\r\n      this.element.classList.add(this.options.baseClass);\r\n      this.element.classList.add(\r\n          `${this.options.baseClass}-${direction}`\r\n      );\r\n      ElementStyleUtil.set(this.element, \"width\", width, true);\r\n\r\n\r\n      this.lastWidth = parseInt(width);\r\n    } else {\r\n      ElementStyleUtil.set(this.element, \"width\", \"\");\r\n      this.element.classList.remove(this.options.baseClass);\r\n      this.element.classList.remove(\r\n          `${this.options.baseClass}-${direction}`\r\n      );\r\n      this._hide();\r\n    }\r\n  };\r\n\r\n  private _getOption = (name: string) => {\r\n    const attr = this.element.getAttribute(`data-kt-drawer-${name}`);\r\n    if (attr) {\r\n      let value = getAttributeValueByBreakpoint(attr);\r\n      if (value !== null && String(value) === \"true\") {\r\n        return true;\r\n      } else {\r\n        if (value !== null && String(value) === \"false\") {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return value;\r\n    } else {\r\n      const optionName = stringSnakeToCamel(name);\r\n      const option = getObjectPropertyValueByKey(this.options, optionName);\r\n      if (option) {\r\n        return getAttributeValueByBreakpoint(option);\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n\r\n  private _toggle = () => {\r\n    if (\r\n        EventHandlerUtil.trigger(this.element, \"kt.drawer.toggle\") === false\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (this.shown) {\r\n      this._hide();\r\n    } else {\r\n      this._show();\r\n    }\r\n\r\n    EventHandlerUtil.trigger(this.element, \"kt.drawer.toggled\");\r\n  };\r\n\r\n  private _hide = () => {\r\n    if (EventHandlerUtil.trigger(this.element, \"kt.drawer.hide\") === false) {\r\n      return;\r\n    }\r\n\r\n    this.shown = false;\r\n    this._deleteOverlay();\r\n    document.body.removeAttribute(`data-kt-drawer-${this.name}`);\r\n    document.body.removeAttribute(`data-kt-drawer`);\r\n    this.element.classList.remove(`${this.options.baseClass}-on`);\r\n    if (this.toggleElement != null) {\r\n      this.toggleElement.classList.remove(\"active\");\r\n    }\r\n\r\n    EventHandlerUtil.trigger(this.element, \"kt.drawer.after.hidden\");\r\n  };\r\n\r\n  private _show = () => {\r\n    if (EventHandlerUtil.trigger(this.element, \"kt.drawer.show\") === false) {\r\n      return;\r\n    }\r\n\r\n    this.shown = true;\r\n    this._createOverlay();\r\n    document.body.setAttribute(`data-kt-drawer-${this.name}`, \"on\");\r\n    document.body.setAttribute(\"data-kt-drawer\", \"on\");\r\n    this.element.classList.add(`${this.options.baseClass}-on`);\r\n    if (this.toggleElement !== null) {\r\n      this.toggleElement.classList.add(\"active\");\r\n    }\r\n\r\n    EventHandlerUtil.trigger(this.element, \"kt.drawer.shown\");\r\n  };\r\n\r\n  private _createOverlay = () => {\r\n    if (this._getOption(\"overlay\") === true) {\r\n      this.overlayElement = document.createElement(\"DIV\");\r\n      const elementZIndex = getCSS(this.element, \"z-index\");\r\n      if (elementZIndex) {\r\n        const overlayZindex = parseInt(elementZIndex) - 1;\r\n        ElementStyleUtil.set(this.overlayElement, \"z-index\", overlayZindex); // update\r\n      }\r\n      document.body.append(this.overlayElement);\r\n      const overlayClassOption = this._getOption(\"overlay-class\");\r\n      if (overlayClassOption) {\r\n        this.overlayElement.classList.add(overlayClassOption.toString());\r\n      }\r\n      this.overlayElement.addEventListener(\"click\", (e) => {\r\n        e.preventDefault();\r\n        this._hide();\r\n      });\r\n    }\r\n  };\r\n\r\n  private _deleteOverlay = () => {\r\n    if (this.overlayElement !== null && this.overlayElement.parentNode) {\r\n      this.overlayElement.parentNode.removeChild(this.overlayElement);\r\n    }\r\n  };\r\n\r\n  private _getDirection = () => {\r\n    return String(this._getOption(\"direction\")) === \"left\" ? \"left\" : \"right\";\r\n  };\r\n\r\n  private _getWidth = () => {\r\n    let width = this._getOption('width');\r\n    if (width && width === 'auto') {\r\n      width = getCSS(this.element, 'width');\r\n    }\r\n\r\n    return width;\r\n  }\r\n\r\n  ///////////////////////\r\n  // ** Public API  ** //\r\n  ///////////////////////\r\n  public toggle = () => {\r\n    this._toggle();\r\n  };\r\n\r\n  public show = () => {\r\n    this._show();\r\n  };\r\n\r\n  public hide = () => {\r\n    this._hide();\r\n  };\r\n\r\n  public isShown = () => {\r\n    return this.shown;\r\n  };\r\n\r\n  public update = () => {\r\n    this._update();\r\n  };\r\n\r\n  public goElement = () => {\r\n    return this.element;\r\n  };\r\n\r\n  // Event API\r\n  public on = (name: string, handler: Function) => {\r\n    return EventHandlerUtil.on(this.element, name, handler);\r\n  };\r\n\r\n  public one = (name: string, handler: Function) => {\r\n    return EventHandlerUtil.one(this.element, name, handler);\r\n  };\r\n\r\n  public off = (name: string) => {\r\n    return EventHandlerUtil.off(this.element, name);\r\n  };\r\n\r\n  public trigger = (name: string, event: Event) => {\r\n    return EventHandlerUtil.trigger(this.element, name, event);\r\n  };\r\n\r\n  // Static methods\r\n  public static hasInstace = (element: HTMLElement): boolean => {\r\n    return DataUtil.has(element, \"drawer\");\r\n  };\r\n\r\n  public static getInstance = (element: HTMLElement) => {\r\n    return DataUtil.get(element, \"drawer\");\r\n  };\r\n\r\n  public static hideAll = () => {\r\n    const oldInstances = DataUtil.getAllInstancesByKey('drawer');\r\n    oldInstances.forEach(dr => {\r\n      dr.hide();\r\n    });\r\n  }\r\n\r\n  public static updateAll = () => {\r\n    const oldInstances = DataUtil.getAllInstancesByKey('drawer');\r\n    oldInstances.forEach(dr => {\r\n      dr.update();\r\n    });\r\n  }\r\n\r\n  // Create Instances\r\n  public static createInstances(selector: string): void {\r\n    const elements = document.body.querySelectorAll(selector);\r\n    elements.forEach((element) => {\r\n      const item = element as HTMLElement;\r\n      let drawer = DrawerComponent.getInstance(item);\r\n      if (!drawer) {\r\n        drawer = new DrawerComponent(item, defaultDrawerOptions);\r\n      }\r\n      drawer.hide();\r\n    });\r\n  }\r\n\r\n  // Global Initialization\r\n  public static initGlobalHandlers(): void {\r\n    // Window Resize Handling\r\n    window.addEventListener(\"resize\", function () {\r\n      let timer: number | undefined;\r\n      throttle(\r\n          timer,\r\n          () => {\r\n            // Locate and update Drawer instances on window resize\r\n            const elements = document.body.querySelectorAll(\r\n                '[data-kt-drawer=\"true\"]'\r\n            );\r\n            elements.forEach((el) => {\r\n              const item = el as HTMLElement;\r\n              const instance = DrawerComponent.getInstance(item);\r\n              if (instance) {\r\n                instance.update();\r\n              }\r\n            });\r\n          },\r\n          200\r\n      );\r\n    });\r\n  }\r\n\r\n  public static bootstrap = () => {\r\n    DrawerComponent.createInstances('[data-kt-drawer=\"true\"]');\r\n    DrawerComponent.initGlobalHandlers();\r\n  };\r\n\r\n  public static reinitialization = () => {\r\n    DrawerComponent.createInstances('[data-kt-drawer=\"true\"]');\r\n    DrawerComponent.hideAll();\r\n    DrawerComponent.updateAll();\r\n  };\r\n}\r\n\r\nexport { DrawerComponent, defaultDrawerOptions };\r\n","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_router_view = _resolveComponent(\"router-view\")!\n\n  return (_openBlock(), _createBlock(_component_router_view))\n}","\r\nimport { defineComponent, onMounted, onUpdated } from \"vue\";\r\nimport { DrawerComponent } from \"@/assets/ts/components/_DrawerOptions\";\r\n\r\nexport default defineComponent({\r\n  name: \"documentation\",\r\n  components: {},\r\n  setup() {\r\n    onMounted(() => {\r\n      console.log(\"mounted\");\r\n      DrawerComponent.reinitialization();\r\n    });\r\n\r\n    onUpdated(() => {\r\n      console.log(\"updated\");\r\n      DrawerComponent.reinitialization();\r\n    });\r\n  }\r\n});\r\n","import { render } from \"./Documentation.vue?vue&type=template&id=956cadc2&ts=true\"\nimport script from \"./Documentation.vue?vue&type=script&lang=ts\"\nexport * from \"./Documentation.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\Users\\\\solihin\\\\dashboard-makasi-owner\\\\node_modules\\\\@vue\\\\cli-service\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}